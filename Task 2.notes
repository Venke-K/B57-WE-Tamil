QUESTION 1

Write a blog on the difference between document and window objects.

Understanding the Document Object:

The 'document' object represents the web page itself, also known as the Document Object 
Model (DOM). It is a hierarchical tree-like structure that models the elements on a web page. 
The 'document' object provides access to these elements and allows developers to interact 
with and manipulate them. Here are some key aspects of the 'document' object:

1. Access to DOM Elements: With the 'document' object, you can access and manipulate 
   HTML elements on a web page. This includes modifying content, attributes, and styles.

2. Event Handling: You can attach event listeners to DOM elements using the 'document'
   object, enabling you to respond to user interactions like clicks, form submissions, and more.

3. Content Manipulation: The 'document' object enables you to create, modify, and remove    
   HTML elements and their content dynamically. 

4. Tree Structure: The DOM, represented by the 'document' object, is structured as a tree 
   with the HTML element at the root, followed by the head and body elements, and then the 
   nested structure of the entire page.

Understanding the Window Object:

The 'window' object represents the browser window or tab in which a web page is displayed. 
It provides a global context for various browser-related operations and interactions. Here are 
some key aspects of the window object:

1. Global Properties and Methods: The 'window' object contains global properties and 
   methods, such as 'setTimeout', 'setInterval', and 'localStorage', which are used for 
   tasks like scheduling code execution and storing data in the browser.

2. Navigation: It allows you to control the browser's navigation, including methods to open 
   new windows or tabs, manipulate the browser's history, and more.

3. Frames and Pop-ups: The 'window' object is responsible for handling frames and pop-up  
   windows, allowing you to interact with content from different sources.

4. Browsing Context: Each tab or window in a browser has its own 'window' object, providing
   a separate environment for the web page's scripts to run.



Key Difference:

1. Scope: The 'document' object's scope is limited to the current web page's DOM structure, 
   while the 'window' object operates at a higher level, controlling the browser's environment 
   and interaction with other tabs or windows.

2. Functionality: The 'document' object is primarily focused on working with DOM elements 
   and their manipulation, whereas the 'window' object is responsible for broader browser-
   related tasks and interactions.

3. Hierarchy: The 'document' object is a subset of the 'window' object. It is contained within 
   the 'window object', and you can access it as 'window.document' or simply 'document'.   

